# -*- coding: utf-8 -*-
"""Applied Data Science_Climate_Hari.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17eKbe3MqWn4CQ-1WFPoCgDHHg9lNMoNN

**NAME - Hari**
"""

pip install wbgapi

import pandas as pd
import wbgapi as wb
import matplotlib.pyplot as plt
import seaborn as sns

#Function definition for reading file
def load_data (dframe):
  d=pd.read_csv(dframe)
  return d

#Pandas function to load the World Indicator dataset
datafrm=load_data("World_Bank_Data.csv")

#Initial rows of the dataset
datafrm.head(5)

#Set the index of dataframe
datafrm1=datafrm.set_index('economy')

#Transposing the dataframe
datafrm1.T.head(5)

#Economic indicators and climate indicators for analysis
ecn_ind = ['NY.GDP.MKTP.CD','SP.POP.TOTL','SL.UEM.1524.FE.ZS','NE.IMP.GNFS.ZS']
c_code = ['BRA',"GBR",'IND','BGD','AUS','FRA','CHE','LUX','JPN','JAM']
clm_ind=['EG.ELC.NGAS.ZS','EG.ELC.RNWX.KH','EN.ATM.CO2E.PC','EN.ATM.GHGT.KT.CE','EN.ATM.CO2E.PC']
ecnmy  = wb.data.DataFrame(ecn_ind, c_code, mrv=7)
clmt = wb.data.DataFrame(clm_ind, c_code, mrv=7)
#NY.GDP.MKTP.CD: Current GDP of the country
#SP.POP.TOTL: Total population of the country
#SL.UEM.1524.FE.ZS: Female youth unemployment of  the country
#NE.IMP.GNFS.ZS: Total import of the country
#EG.ELC.NGAS.ZS: Natural gas Electricity production
#EG.ELC.RNWX.KH: Renewable sources Electricity production
#EN.ATM.GHGT.KT.CE: Emissions of Greenshouse gas
#EN.ATM.CO2E.PC: CO2 emissions

# Economic factors
ecnmy.columns = [a.replace('YR','') for a in ecnmy.columns]
ecnmy=ecnmy.stack().unstack(level=1)
ecnmy.index.names = ['Country_Code', 'Year']
ecnmy.columns
ecnmy.fillna(0)
ecnmy.head(7)

# Climate factors
clmt.columns = [a.replace('YR','') for a in clmt.columns]
clmt=clmt.stack().unstack(level=1)
clmt.index.names = ['Country_Code', 'Year']
clmt.columns
clmt.fillna(0)
clmt.head(7)

#Drop NA values and setting the correct index
df1=ecnmy.reset_index()
df2=clmt.reset_index()
df3=df1.fillna(0)
df4=df2.fillna(0)

#Final dataframe- Economy and Climate
final_df = pd.merge(df3, df4)
final_df.head(6)

#Descriptive statistics of Brazil
d1=final_df[(final_df['Country_Code']=='BRA')]
d1.describe()

"""**The average total import in Brazil is equivalent to 13.22**"""

# Line plot visualisation- Brazil's Current GDP
plt.plot(d1["Year"], d1["NY.GDP.MKTP.CD"],color="blue")
plt.xlabel("Year")
plt.ylabel("NY.GDP.MKTP.CD")
plt.show()

#Descriptive statistics of Great Britain
d2=final_df[(final_df['Country_Code']=='GBR')]
d2.describe()

"""**The average Female unemployment of youths in Great Britain is lower than that of Brazil and the average carbon dioxide emissions in metric tons per capita in Great Britain is higher than that of Brazil**"""

# Line plot visualisation- Great Britain's carbon dioxide emissions in metric tons per capita
plt.plot(d2["Year"], d2["EN.ATM.CO2E.PC"],color="blue")
plt.xlabel("Year")
plt.ylabel("EN.ATM.CO2E.PC")
plt.show()

#Descriptive statistics of India
d3=final_df[(final_df['Country_Code']=='IND')]
d3.describe()

"""**The average total greenshouse gas emission in India is higher than Brazil and Great Britain. The average total import of Great Britain is higher than India**"""

# Bar plot visualisation-India's total imports
d3.plot(x="Year", y="NE.IMP.GNFS.ZS", kind="bar",color="blue")

#Descriptive statistics of Bangladesh
d4=final_df[(final_df['Country_Code']=='BGD')]
d4.describe()

"""**The average import in Bangladesh is lower than India and Great Britain. The average carbon dioxide emissions in metric tons per capita in Bangladesh is lower than India and Great Britain**"""

# Scatter plot visualisation- Bangladesh's total population
d4.plot(x="Year", y="SP.POP.TOTL", kind="scatter",color="blue")

#Descriptive statistics of Australia
d5=final_df[(final_df['Country_Code']=='AUS')]
d5.describe()

"""**The average population of Australia is lower than that of Bangladesh and India. The average electricity production from renewable resources is higher than that of Bangladesh but lower than India**"""

# Scatter plot visualisation-  Australia's greenshouse gas emission
d5.plot(x="Year", y="EN.ATM.GHGT.KT.CE", kind="scatter",color="blue")

#Descriptive statistics of France
d6=final_df[(final_df['Country_Code']=='FRA')]
d6.describe()

"""**The average current GDP of France is higher than Australia and Bangladesh. The average electricity production from natural  gas in France is lower than Australia and Bangladesh**"""

# Bar plot visualisation- France's current GDP
d6.plot(x="Year", y="NY.GDP.MKTP.CD", kind="bar",color="blue")

#Descriptive statistics of Switzerland
d7=final_df[(final_df['Country_Code']=='CHE')]
d7.describe()

"""**The average electricity production from natural gas in Switzerland is lower than France and Australia. The average total imports of Switzerland is higher than France and Australia**"""

# Scatter plot visualisation- Switzerland's total import
d7.plot(x="Year", y="NE.IMP.GNFS.ZS", kind="scatter",color="blue")

#Descriptive statistics of Luxembourg
d8=final_df[(final_df['Country_Code']=='LUX')]
d8.describe()

"""**The average total carbon dioxide emission in Luxembourg is higher than Switzerland and France. The average electricity production from renewable resources in Luxembourg is lower than Switzerland and France**"""

# Bar plot visualisation- Luxembourg's female youth unemployment
d8.plot(x="Year", y="SL.UEM.1524.FE.ZS", kind="bar",color="blue")

#Descriptive statistics of Japan
d9=final_df[(final_df['Country_Code']=='JPN')]
d9.describe()

"""**The average population in Japan is higher than Luxembourg and Switzerland. The average greenhouse gas emissions in Japan is higher than Luxembourg and Switzerland**"""

# Scatter plot visualisation- Japan's Carbon dioxide emissions in metric tons per capita
d9.plot(x="Year", y="EN.ATM.CO2E.PC", kind="scatter",color="blue")

#Descriptive statistics of Jamaica
d10=final_df[(final_df['Country_Code']=='JAM')]
d10.describe()

"""**The average total import of Jamaica is lower than Luxembourg but higher than Japan. The average female youth unemployment in Jamaica is higher than Luxembourg and Japan**"""

# Line plot visualisation- Jamaica's current GDP
plt.plot(d10["Year"], d10["NY.GDP.MKTP.CD"],color="blue")
plt.xlabel("Year")
plt.ylabel("NY.GDP.MKTP.CD")
plt.show()

"""**CORRELATION ANALYSIS- Luxembourg**"""

plt.plot(d8["EN.ATM.CO2E.PC"], d8["NY.GDP.MKTP.CD"],color="blue")
plt.xlabel("EN.ATM.CO2E.PC")
plt.ylabel("NY.GDP.MKTP.CD")
plt.show()

plt.plot(d8["SP.POP.TOTL"], d8["EN.ATM.GHGT.KT.CE"],color="blue")
plt.xlabel("SP.POP.TOTL")
plt.ylabel("EN.ATM.GHGT.KT.CE")
plt.show()

plt.plot(d8["EN.ATM.CO2E.PC"], d8["EN.ATM.GHGT.KT.CE"],color="blue")
plt.xlabel("EN.ATM.CO2E.PC")
plt.ylabel("EN.ATM.GHGT.KT.CE")
plt.show()

"""**CORRELATION ANALYSIS- Switzerland**"""

plt.plot(d7["SP.POP.TOTL"], d7["SL.UEM.1524.FE.ZS"],color="blue")
plt.xlabel("SP.POP.TOTL")
plt.ylabel("SL.UEM.1524.FE.ZS")
plt.show()

"""**HEATMAP**"""

#Heatmap for Brazil
import warnings
with warnings.catch_warnings(record=True):
    df1=final_df[((final_df['Country_Code']=='BRA'))]
    fig,axs = plt.subplots(figsize=(7, 7))
    sns.heatmap(df1.corr(), annot = True, fmt= '.2f',cmap='summer')
    plt.show()

final_df.describe()

